# Crop Disease Detection System - Docker Compose Configuration
version: '3.8'

services:
  # Main Flask Application
  app:
    build: .
    container_name: crop_disease_app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://crop_user:crop_password@db:5432/crop_disease_db
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./static/uploads:/app/static/uploads
      - ./ml_models:/app/ml_models
    depends_on:
      - db
      - redis
    networks:
      - crop_network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: crop_disease_db
    environment:
      - POSTGRES_USER=crop_user
      - POSTGRES_PASSWORD=crop_password
      - POSTGRES_DB=crop_disease_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - crop_network
    restart: unless-stopped

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: crop_disease_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crop_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional for production)
  nginx:
    image: nginx:alpine
    container_name: crop_disease_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./static:/var/www/static
    depends_on:
      - app
    networks:
      - crop_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  crop_network:
    driver: bridge

# Development override file usage:
# Create docker-compose.override.yml for development settings